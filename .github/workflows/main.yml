# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the env/dev branch
  push:
    branches: [env/dev]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # this corresponds to the branch that we have mentioned above
    environment:
      name: "GH_DEV"

    # node version
    strategy:
      matrix:
        node-version: [12.x]

    # steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # checks-out repository under $GITHUB_WORKSPACE, so your job can access it
      - name: clone this repo
        uses: actions/checkout@v2

      # setup NodeJS
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # install auth0-deploy-cli
      - name: install auth0-deploy-cli
        run: npm install --global auth0-deploy-cli

      # set environment variables
      - name: set env-vars and import tenant config
        env:
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          APP_HOST: ${{ secrets.APP_HOST }}
          APP_PORT: ${{ secrets.APP_PORT }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}
          MONGO_PORT: ${{ secrets.MONGO_PORT }}
          MONGO_USER: ${{ secrets.MONGO_USER }}
          SQLSERVER_HOST: ${{ secrets.SQLSERVER_HOST }}
          SQLSERVER_PASS: ${{ secrets.SQLSERVER_PASS }}
          SQLSERVER_PORT: ${{ secrets.SQLSERVER_PORT }}
          SQLSERVER_USER: ${{ secrets.SQLSERVER_USER }}
          SUPPORT_URL: ${{ secrets.SUPPORT_URL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          DEVELOPER_EMAIL: ${{ secrets.DEVELOPER_EMAIL }}

        # import tenant configuration
        run: a0deploy import --input_file ./tenant/tenant.yaml
